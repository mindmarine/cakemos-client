{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","images/cakemos.png","components/Header/Header.js","apiConfig.js","api/auth.js","components/AutoDismissAlert/messages.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/influencer.js","components/influencer/CreateInfluencer.js","images/cakemosprofile2.png","components/influencer/ShowInfluencers.js","components/influencer/ShowInfluencer.js","components/influencer/UpdateInfluencer.js","components/influencer/UpdateInfluencerV2.js","components/influencer/InfluencerTable.js","components/Homepage/Homepage.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","ColoredLine","color","style","backgroundColor","height","Header","Navbar","bg","expand","Brand","textDecoration","float","marginTop","src","cakemosLogo","width","marginLeft","Toggle","aria-controls","Collapse","Nav","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","email","password","updateInfluencerSuccess","updateInfluencerFailure","withRouter","useState","setEmail","setPassword","passwordConfirmation","setPasswordConfirmation","Form","onSubmit","e","preventDefault","msgAlert","history","setUser","password_confirmation","then","res","push","catch","error","Group","controlId","Label","Control","required","type","value","placeholder","onChange","target","Button","name","useEffect","clearUser","headers","Authorization","token","signOut","oldPassword","setOldPassword","newPassword","setNewPassword","passwords","old","new","changePassword","influencerIndex","influencerShow","influencerID","deleteInfluencer","influencerId","firstname","setFirstname","lastname","setLastname","username","setUsername","profilephoto","setProfilephoto","country","setCountry","city","setCity","youtube","setYoutube","instagram","setInstagram","twitter","setTwitter","tiktok","setTiktok","twitch","setTwitch","youtubeaudiencesize","setYoutubeAudienceSize","instagramaudiencesize","setInstagramAudienceSize","twitteraudiencesize","setTwitterAudienceSize","tiktokaudiencesize","setTiktokAudienceSize","twitchaudiencesize","setTwitchAudienceSize","topics","setTopics","tags","setTags","youtubeengagement","setYoutubeEngagement","instagramengagement","setInstagramEngagement","twitterengagement","setTwitterEngagement","tiktokengagement","setTiktokEngagement","twitchengagement","setTwitchEngagement","influencer","console","log","owner","createInfluencer","cardImg","margin","padding","cardCol","cardTitle","cardBody","card","border","influencers","setInfluencers","deletedinfluencer","setDeletedInfluencer","influencersList","map","Col","xs","md","lg","xl","Card","Body","_id","Img","cakemosprofile2","Title","Text","instagramaengagement","pathname","onClick","err","Fragment","Row","divMng","match","params","Table","striped","bordered","hover","YoutubeOutlined","InstagramOutlined","TwitterOutlined","onUpdateInfluencer","influencerUpdate","UpdateInfluencerV2","handleChange","event","copiedInfluencer","Object","assign","handleSubmit","influencerUpdateV2","done","influencersAsRows","HomePageVideo","playing","App","msgAlerts","filter","msg","uuid","path","exact","ShowInfluencer","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c5ef0453.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","export default __webpack_public_path__ + \"static/media/cakemos.4d48c4ce.png\";","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\n\n// import Image from 'react-bootstrap/Image'\nimport cakemosLogo from '../../images/cakemos.png'\nimport './Header.scss'\n\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n    <NavLink to='/add-influencer' className='nav-link'>Add Influencer</NavLink>\n    <NavLink to='/show-influencers' className='nav-link'>Show Influencers</NavLink>\n    <NavLink to='/influencerstable' className='nav-link'>Influencers Table</NavLink>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    {/* <NavLink exact to='/' className='nav-link'>Home</NavLink> */}\n    {/* Add logo another way */}\n    {/* <Image src='../../images/cakemos.png' fluid /> */}\n    {/* http://localhost:7165/public/cakemos.png/100px250 */}\n  </Fragment>\n)\n\nconst ColoredLine = ({ color }) => (\n\n  <hr\n    style={{\n      color: color,\n      backgroundColor: color,\n      height: 3\n    }}\n  />\n)\n\nconst Header = ({ user }) => (\n  <>\n    <Navbar bg='primary' variant='dark' expand='md'>\n      <Navbar.Brand>\n        {/* <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>cakemos</Link> */}\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none', float: 'left !important', marginTop: '-15px !important' }}><img src={cakemosLogo} style={{ width: '150px', marginLeft: '25px', marginTop: '-7' }}/></Link>\n\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ml-auto'>\n          {/* {user && (\n            <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n          )} */}\n          {alwaysOptions}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n    <ColoredLine color=\"teal\" />\n  </>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://cakemos.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","export const signUpSuccess = 'Successfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n\n// influencer specific messages\nexport const createInfluenceSuccess = 'Adding the influencer was successful'\nexport const createInfluencerFailure = 'We have failed trying to add the influencer. data might be incomplete, or another error might happen'\n\n// update influencer specific messages\nexport const updateInfluencerSuccess = 'Update the influencer was successful'\nexport const updateInfluencerFailure = 'We have failed trying to update the influencer'\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nfunction SignUp (props) {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n\n  const onSignUp = (e) => {\n    e.preventDefault()\n    const { msgAlert, history, setUser } = props\n\n    const state = {\n      email: email,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }\n    signUp(state)\n      .then(() => signIn(state))\n      .then((res) => setUser(res.data.user))\n      .then(() =>\n        msgAlert({\n          heading: 'Sign Up Success',\n          message: signUpSuccess,\n          variant: 'success'\n        })\n      )\n      .then(() => history.push('/'))\n      .catch((error) => {\n        // setEmail(\"\");\n        // setPassword(\"\");\n        // setPasswordConfirmation(\"\");\n        msgAlert({\n          heading: 'Sign Up Failed with error: ' + error.message,\n          message: signUpFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => {\n                setEmail(e.target.value)\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              value={password}\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => {\n                setPassword(e.target.value)\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"passwordConfirmation\">\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              value={passwordConfirmation}\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              onChange={(e) => {\n                setPasswordConfirmation(e.target.value)\n              }}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(SignUp)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nfunction SignIn (props) {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const onSignIn = (e) => {\n    e.preventDefault()\n    const { msgAlert, history, setUser } = props\n    const data = {\n      email,\n      password\n    }\n    signIn(data)\n      .then((res) => {\n        setUser(res.data.user)\n      })\n      .then(() => {\n        msgAlert({\n          heading: 'Sign In Success',\n          message: signInSuccess,\n          variant: 'success'\n        })\n      })\n      .then(() => {\n        history.push('/')\n      })\n      .catch((error) => {\n        setEmail('')\n        setPassword('')\n        msgAlert({\n          heading: 'Sign In Failed with error: ' + error.message,\n          message: signInFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => {\n                setEmail(e.target.value)\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name=\"password\"\n              value={password}\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => {\n                setPassword(e.target.value)\n              }}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(SignIn)\n","import { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nfunction SignOut (props) {\n  useEffect(() => {\n    const { msgAlert, history, clearUser, user } = props\n    signOut(user)\n      .then(() => {\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      })\n      .then(() => {\n        history.push('/')\n      })\n      .then(() => {\n        clearUser()\n      })\n  }, [])\n  return null\n}\n\nexport default withRouter(SignOut)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport {\n  changePasswordSuccess,\n  changePasswordFailure\n} from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nfunction ChangePassword (props) {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n\n  const onChangePassword = (e) => {\n    e.preventDefault()\n    const { msgAlert, history, user } = props\n    const data = {\n      oldPassword,\n      newPassword\n    }\n    changePassword(data, user)\n      .then(() => {\n        msgAlert({\n          heading: 'Change Password Success',\n          message: changePasswordSuccess,\n          variant: 'success'\n        })\n      })\n      .then(() => history.push('/'))\n      .catch((error) => {\n        setOldPassword('')\n        setNewPassword('')\n        msgAlert({\n          heading: 'Change Password Failed with error: ' + error.message,\n          message: changePasswordFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId=\"oldPassword\">\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name=\"oldPassword\"\n              value={oldPassword}\n              type=\"password\"\n              placeholder=\"Old Password\"\n              onChange={(e) => {\n                setOldPassword(e.target.value)\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"newPassword\">\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name=\"newPassword\"\n              value={newPassword}\n              type=\"password\"\n              placeholder=\"New Password\"\n              onChange={(e) => {\n                setNewPassword(e.target.value)\n              }}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(ChangePassword)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\n// create influencer\nexport const createInfluencer = (influencer, user) => {\n  console.log(influencer)\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/influencers/',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      influencer: {\n        owner: influencer.owner,\n        firstname: influencer.firstname,\n        lastname: influencer.lastname,\n        username: influencer.username,\n        profilephoto: influencer.profilephoto,\n        country: influencer.country,\n        city: influencer.city,\n        youtube: influencer.youtube,\n        instagram: influencer.instagram,\n        twitter: influencer.twitter,\n        tiktok: influencer.tiktok,\n        twitch: influencer.twitch,\n        youtubeaudiencesize: influencer.youtubeaudiencesize,\n        instagramaudiencesize: influencer.instagramaudiencesize,\n        twitteraudiencesize: influencer.twitteraudiencesize,\n        tiktokaudiencesize: influencer.tiktokaudiencesize,\n        twitchaudiencesize: influencer.twitchaudiencesize,\n        topics: influencer.topics,\n        tags: influencer.tags,\n        youtubeengagement: influencer.youtubeengagement,\n        instagramengagement: influencer.instagramengagement,\n        twitterengagement: influencer.twitterengagement,\n        tiktokengagement: influencer.tiktokengagement,\n        twitchengagement: influencer.twitchengagement\n      }\n    }\n  })\n}\n\n// show influencer index\nexport const influencerIndex = (user) => {\n  return axios({\n    url: apiUrl + '/influencers/',\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// show influencer\nexport const influencerShow = (user, influencerID) => {\n  return axios({\n    url: apiUrl + `/influencers/${influencerID}`,\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// update influencer\nexport const influencerUpdate = (influencer, user, influencerID) => {\n  return axios({\n    url: apiUrl + `/influencers/${influencerID}`,\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      influencer: {\n        owner: influencer.owner,\n        firstname: influencer.firstname,\n        lastname: influencer.lastname\n        // username: influencer.username,\n        // profilephoto: influencer.profilephoto,\n        // country: influencer.country,\n        // city: influencer.city,\n        // youtube: influencer.youtube,\n        // instagram: influencer.instagram,\n        // twitter: influencer.twitter,\n        // tiktok: influencer.tiktok,\n        // twitch: influencer.twitch,\n        // youtubeaudiencesize: influencer.youtubeaudiencesize,\n        // instagramaudiencesize: influencer.instagramaudiencesize,\n        // twitteraudiencesize: influencer.twitteraudiencesize,\n        // tiktokaudiencesize: influencer.tiktokaudiencesize,\n        // twitchaudiencesize: influencer.twitchaudiencesize,\n        // topics: influencer.topics,\n        // tags: influencer.tags,\n        // youtubeengagement: influencer.youtubeengagement,\n        // instagramengagement: influencer.instagramengagement,\n        // twitterengagement: influencer.twitterengagement,\n        // tiktokengagement: influencer.tiktokengagement,\n        // twitchengagement: influencer.twitchengagement\n      }\n    }\n  })\n}\n\n// update influencer V2\nexport const influencerUpdateV2 = (influencer, user, influencerID) => {\n  console.log(user)\n  return axios({\n    url: apiUrl + `/influencers/${influencerID}`,\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      influencer: {\n        owner: influencer.owner,\n        firstname: influencer.firstname\n        // lastname: influencer.lastname,\n        // username: influencer.username,\n        // profilephoto: influencer.profilephoto,\n        // country: influencer.country,\n        // city: influencer.city,\n        // youtube: influencer.youtube,\n        // instagram: influencer.instagram,\n        // twitter: influencer.twitter,\n        // tiktok: influencer.tiktok,\n        // twitch: influencer.twitch,\n        // youtubeaudiencesize: influencer.youtubeaudiencesize,\n        // instagramaudiencesize: influencer.instagramaudiencesize,\n        // twitteraudiencesize: influencer.twitteraudiencesize,\n        // tiktokaudiencesize: influencer.tiktokaudiencesize,\n        // twitchaudiencesize: influencer.twitchaudiencesize,\n        // topics: influencer.topics,\n        // tags: influencer.tags,\n        // youtubeengagement: influencer.youtubeengagement,\n        // instagramengagement: influencer.instagramengagement,\n        // twitterengagement: influencer.twitterengagement,\n        // tiktokengagement: influencer.tiktokengagement,\n        // twitchengagement: influencer.twitchengagement\n      }\n    }\n  })\n}\n\n// delete an influencer\nexport const deleteInfluencer = (user, influencerId) => {\n  return axios({\n    url: apiUrl + '/influencers/' + influencerId,\n    method: 'delete',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\n// import { signIn } from '../../api/auth'\n// import { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\n// Influencer specific imports\nimport { createInfluencer } from '../../api/influencer'\nimport { createInfluenceSuccess, createInfluencerFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nfunction CreateInfluencer (props) {\n//   const [email, setEmail] = useState('')\n//   const [password, setPassword] = useState('')\n// influencer variables\n  const [firstname, setFirstname] = useState('')\n  const [lastname, setLastname] = useState('')\n  const [username, setUsername] = useState('')\n  const [profilephoto, setProfilephoto] = useState('')\n  const [country, setCountry] = useState('')\n  const [city, setCity] = useState('')\n  const [youtube, setYoutube] = useState('')\n  const [instagram, setInstagram] = useState('')\n  const [twitter, setTwitter] = useState('')\n  const [tiktok, setTiktok] = useState('')\n  const [twitch, setTwitch] = useState('')\n  const [youtubeaudiencesize, setYoutubeAudienceSize] = useState('')\n  const [instagramaudiencesize, setInstagramAudienceSize] = useState('')\n  const [twitteraudiencesize, setTwitterAudienceSize] = useState('')\n  const [tiktokaudiencesize, setTiktokAudienceSize] = useState('')\n  const [twitchaudiencesize, setTwitchAudienceSize] = useState('')\n  const [topics, setTopics] = useState('')\n  const [tags, setTags] = useState('')\n  const [youtubeengagement, setYoutubeEngagement] = useState('')\n  const [instagramengagement, setInstagramEngagement] = useState('')\n  const [twitterengagement, setTwitterEngagement] = useState('')\n  const [tiktokengagement, setTiktokEngagement] = useState('')\n  const [twitchengagement, setTwitchEngagement] = useState('')\n\n  const onCreateInfluencer = (e) => {\n    e.preventDefault()\n    const { msgAlert, history, user } = props\n    const data = {\n      firstname,\n      lastname,\n      username,\n      profilephoto,\n      country,\n      city,\n      youtube,\n      instagram,\n      twitter,\n      tiktok,\n      twitch,\n      youtubeaudiencesize,\n      instagramaudiencesize,\n      twitteraudiencesize,\n      tiktokaudiencesize,\n      twitchaudiencesize,\n      topics,\n      tags,\n      youtubeengagement,\n      instagramengagement,\n      twitterengagement,\n      tiktokengagement,\n      twitchengagement\n    }\n    createInfluencer(data, user)\n    //   .then((res) => {\n    //     setUser(res.data.user)\n    //   })\n      .then(() => {\n        msgAlert({\n          heading: 'The influencer was added successfully',\n          message: createInfluenceSuccess,\n          variant: 'success'\n        })\n      })\n      .then(() => {\n        history.push('/')\n      })\n      .catch((error) => {\n        setFirstname('')\n        msgAlert({\n          heading: 'Adding the influencer Failed with error: ' + error.message,\n          message: createInfluencerFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n        <h3>Create Influencer</h3>\n        <Form onSubmit={onCreateInfluencer}>\n\n          {/* first name */}\n          <Form.Group controlId=\"firstname\">\n            <Form.Label>(required) first name</Form.Label>\n            <Form.Control\n              required\n              type=\"string\"\n              name=\"firstname\"\n              value={firstname}\n              placeholder=\"Enter firstname\"\n              onChange={(e) => {\n                setFirstname(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* last name */}\n          <Form.Group controlId=\"lastname\">\n            <Form.Label>(required) last name</Form.Label>\n            <Form.Control\n              // required\n              type=\"string\"\n              name=\"lastname\"\n              value={lastname}\n              placeholder=\"Enter last name\"\n              onChange={(e) => {\n                setLastname(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* username */}\n          <Form.Group controlId=\"username\">\n            <Form.Label>(required) username</Form.Label>\n            <Form.Control\n              required\n              type=\"string\"\n              name=\"username\"\n              value={username}\n              placeholder=\"Enter username\"\n              onChange={(e) => {\n                setUsername(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* Profile Photo */}\n          <Form.Group controlId=\"profilephoto\">\n            <Form.Label>Profile Photo</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"profilephoto\"\n              value={profilephoto}\n              placeholder=\"Choose profilephoto\"\n              onChange={(e) => {\n                setProfilephoto(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* Country */}\n          <Form.Group controlId=\"country\">\n            <Form.Label>Country</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"country\"\n              value={country}\n              placeholder=\"Choose country\"\n              onChange={(e) => {\n                setCountry(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* City */}\n          <Form.Group controlId=\"city\">\n            <Form.Label>City</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"city\"\n              value={city}\n              placeholder=\"Choose city\"\n              onChange={(e) => {\n                setCity(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* Youtube */}\n          <Form.Group controlId=\"Youtube\">\n            <Form.Label>Youtube</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"youtube\"\n              value={youtube}\n              placeholder=\"youtube\"\n              onChange={(e) => {\n                setYoutube(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* instagram */}\n          <Form.Group controlId=\"instagram\">\n            <Form.Label>instagram</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"instagram\"\n              value={instagram}\n              placeholder=\"instagram\"\n              onChange={(e) => {\n                setInstagram(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* twitter */}\n          <Form.Group controlId=\"twitter\">\n            <Form.Label>twitter</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"twitter\"\n              value={twitter}\n              placeholder=\"twitter\"\n              onChange={(e) => {\n                setTwitter(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* tiktok */}\n          <Form.Group controlId=\"tiktok\">\n            <Form.Label>tiktok</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"tiktok\"\n              value={tiktok}\n              placeholder=\"tiktok\"\n              onChange={(e) => {\n                setTiktok(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* twitch */}\n          <Form.Group controlId=\"twitch\">\n            <Form.Label>twitch</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"twitch\"\n              value={twitch}\n              placeholder=\"twitch\"\n              onChange={(e) => {\n                setTwitch(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* Youtube Audience Size */}\n          <Form.Group controlId=\"youtubeaudiencesize\">\n            <Form.Label>youtube audience size</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"youtubeaudiencesize\"\n              value={youtubeaudiencesize}\n              placeholder=\"youtubeaudiencesize\"\n              onChange={(e) => {\n                setYoutubeAudienceSize(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* Instagram Audience Size */}\n          <Form.Group controlId=\"instagramaudiencesize\">\n            <Form.Label>instagram audience size</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"instagramaudiencesize\"\n              value={instagramaudiencesize}\n              placeholder=\"instagramaudiencesize\"\n              onChange={(e) => {\n                setInstagramAudienceSize(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* twitter Audience Size */}\n          <Form.Group controlId=\"twitteraudiencesize\">\n            <Form.Label>twitter audience size</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"twitteraudiencesize\"\n              value={twitteraudiencesize}\n              placeholder=\"twitteraudiencesize\"\n              onChange={(e) => {\n                setTwitterAudienceSize(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* TikTok Audience Size */}\n          <Form.Group controlId=\"tiktokaudiencesize\">\n            <Form.Label>tiktok audience size</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"tiktokaudiencesize\"\n              value={tiktokaudiencesize}\n              placeholder=\"tiktokaudiencesize\"\n              onChange={(e) => {\n                setTiktokAudienceSize(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* Twitch Audience Size */}\n          <Form.Group controlId=\"twitchaudiencesize\">\n            <Form.Label>twitch audience size</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"twitchaudiencesize\"\n              value={twitchaudiencesize}\n              placeholder=\"twitchaudiencesize\"\n              onChange={(e) => {\n                setTwitchAudienceSize(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* topics */}\n          <Form.Group controlId=\"topics\">\n            <Form.Label>topics</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"topics\"\n              value={topics}\n              placeholder=\"topics\"\n              onChange={(e) => {\n                setTopics(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* tags */}\n          <Form.Group controlId=\"tags\">\n            <Form.Label>tags</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"tags\"\n              value={tags}\n              placeholder=\"tags\"\n              onChange={(e) => {\n                setTags(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* youtubeengagement */}\n          <Form.Group controlId=\"youtubeengagement\">\n            <Form.Label>youtubeengagement</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"youtubeengagement\"\n              value={youtubeengagement}\n              placeholder=\"youtubeengagement\"\n              onChange={(e) => {\n                setYoutubeEngagement(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* instagramengagement */}\n          <Form.Group controlId=\"instagramengagement\">\n            <Form.Label>instagramengagement</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"instagramengagement\"\n              value={instagramengagement}\n              placeholder=\"instagramengagement\"\n              onChange={(e) => {\n                setInstagramEngagement(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* twitterengagement */}\n          <Form.Group controlId=\"twitterengagement\">\n            <Form.Label>twitterengagement</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"twitterengagement\"\n              value={twitterengagement}\n              placeholder=\"twitterengagement\"\n              onChange={(e) => {\n                setTwitterEngagement(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* tiktokengagement */}\n          <Form.Group controlId=\"tiktokengagement\">\n            <Form.Label>tiktokengagement</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"tiktokengagement\"\n              value={tiktokengagement}\n              placeholder=\"tiktokengagement\"\n              onChange={(e) => {\n                setTiktokEngagement(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* twitchengagement */}\n          <Form.Group controlId=\"twitchengagement\">\n            <Form.Label>twitchengagement</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"twitchengagement\"\n              value={twitchengagement}\n              placeholder=\"twitchengagement\"\n              onChange={(e) => {\n                setTwitchEngagement(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(CreateInfluencer)\n","export default __webpack_public_path__ + \"static/media/cakemosprofile2.ecc13229.png\";","import React, { useState, useEffect } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n// import { withRouter } from 'react-router-dom'\nimport { Card, Col, Row } from 'react-bootstrap'\n\n// import { signUp, signIn } from '../../api/auth'\n// import { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Button from 'react-bootstrap/Button'\n\nimport { influencerIndex, deleteInfluencer } from '../../api/influencer'\nimport cakemosprofile2 from '../../images/cakemosprofile2.png'\n\nconst cardImg = {\n  margin: 'auto',\n  padding: '5px',\n  width: 'auto',\n  height: '100px'\n}\n\nconst cardCol = {\n  margin: 'auto',\n  marginTop: '10px'\n}\n\nconst cardTitle = {\n  height: '10px'\n}\n\nconst cardBody = {\n  backgroundColor: 'teal',\n  // borderRadius: '0px 0px 8px 8px',\n  color: '#FFF'\n}\n\nconst card = {\n  border: 'none'\n  // borderRadius: '10px'\n}\n\n// import Form from 'react-bootstrap/Form'\n// import Button from 'react-bootstrap/Button'\n\nfunction ShowInfluencers (props) {\n  // in order to be able to use the map method we need to set the state of influencers to an array from the beginning\n  const [influencers, setInfluencers] = useState([])\n  // const [refreshinfluencers, setRefreshInfluencers] = useState(false)\n  const [deletedinfluencer, setDeletedInfluencer] = useState(false)\n\n  const onDeleteInfluencer = (influencerID) => {\n    deleteInfluencer(user, influencerID)\n      .then(() => setDeletedInfluencer(!deletedinfluencer))\n      // Redirect to the influencers index\n      // .then(() => history.push('/show-influencers'))\n      .then(() =>\n        msgAlert({\n          heading: 'Influencer Deleted Successfully',\n          message: 'This influencer was removed',\n          variant: 'success'\n        })\n      )\n      .catch((err) =>\n        msgAlert({\n          heading: 'Influencer was not deleted',\n          message: 'Something went wrong: ' + err.message,\n          variant: 'danger'\n        })\n      )\n  }\n\n  useEffect(() => {\n    const { user } = props\n    influencerIndex(user)\n      .then((res) => setInfluencers(res.data.influencers))\n      .then()\n      .catch(console.error)\n  }, [deletedinfluencer])\n\n  // // function to delete influencer\n  const { user, msgAlert } = props\n\n  // const { user } = props\n\n  const influencersList = influencers.map((influencer) => (\n    <Col xs={12} md={6} lg={4} xl={4} key={influencer._id} style={cardCol}>\n      <Card style={card} className='m-auto'>\n\n        <Card.Body style={cardBody}>\n          {/* <Card.Img variant='top' src={ require(`../../images/${influencer.profilephoto}.jpeg`).ReactComponent } style={cardImg} /> */}\n          {/* <Card.Img variant='top' src={'../../src/images/influencerA.png'} style={cardImg} /> */}\n          {/* <Card.Img variant='top' src= { `${influencer.profilephoto}` } style={cardImg} /> */}\n          <Link to={`/show-influencer/${influencer._id}`}>\n            <Card.Img className=\"photo\" variant='top' src={cakemosprofile2} style={cardImg}/>\n          </Link>\n          {/* Card Title */}\n          <Card.Title style={cardTitle}>{influencer.username}</Card.Title>\n          <Card.Text>\n            <p></p>\n            <p>{`Name: ${influencer.firstname} ${influencer.lastname}`}</p>\n            {/* <p>Photo: {influencer.profilephoto}</p> */}\n            <p>Instagram: {influencer.instagram}</p>\n            <p>Instagram Audience: {influencer.instagramaudiencesize}</p>\n            <p>Instagram Engagement: {influencer.instagramaengagement}</p>\n          </Card.Text>\n          {/* Update Button */}\n          <Button>\n            <Link to={{ pathname: `/update-influencer/${influencer._id}/editv2` }} style={{ color: '#FFF', textDecoration: 'none' }}>Update\n            </Link>\n          </Button>\n\n          {/* Delete Button */}\n          <Button\n            variant='danger' style={{ color: '#FFF', textDecoration: 'none' }} onClick={() => onDeleteInfluencer(influencer._id)}>Delete\n          </Button>\n        </Card.Body>\n\n      </Card>\n\n    </Col>\n  ))\n\n  return (\n    <React.Fragment>\n      <h1>Influencers</h1>\n      {/* <li>{influencersList}</li> */}\n      <Row>\n        <h3 className='text-light'>Influencers</h3>\n        <Col xs={12} style={{ marginTop: '10px' }}>\n          <Row>{influencersList}</Row>\n        </Col>\n\n        <div className='col-12 mt-5'></div>\n      </Row>\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(ShowInfluencers)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n// import { withRouter } from 'react-router-dom'\n\n// import { signUp, signIn } from '../../api/auth'\n// import { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport { influencerShow } from '../../api/influencer'\n\n// import Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\n\nimport { Card } from 'react-bootstrap'\n\nimport { YoutubeOutlined, InstagramOutlined, TwitterOutlined } from '@ant-design/icons'\n\nimport cakemosprofile2 from '../../images/cakemosprofile2.png'\n\nconst cardImg = {\n  margin: 'auto',\n  padding: '5px',\n  width: '300px',\n  height: '300px'\n}\n\nconst divMng = {\n  width: 'auto',\n  height: '400px'\n}\n\nfunction ShowInfluencers (props) {\n  const [firstname, setFirstname] = useState('')\n  const [lastname, setLastname] = useState('')\n  const [username, setUsername] = useState('')\n  const [profilephoto, setProfilephoto] = useState('')\n  const [country, setCountry] = useState('')\n  const [city, setCity] = useState('')\n  const [youtube, setYoutube] = useState('')\n  const [instagram, setInstagram] = useState('')\n  const [twitter, setTwitter] = useState('')\n  const [tiktok, setTiktok] = useState('')\n  const [twitch, setTwitch] = useState('')\n  const [youtubeaudiencesize, setYoutubeAudienceSize] = useState('')\n  const [instagramaudiencesize, setInstagramAudienceSize] = useState('')\n  const [twitteraudiencesize, setTwitterAudienceSize] = useState('')\n  const [tiktokaudiencesize, setTiktokAudienceSize] = useState('')\n  const [twitchaudiencesize, setTwitchAudienceSize] = useState('')\n  const [topics, setTopics] = useState('')\n  const [tags, setTags] = useState('')\n  const [youtubeengagement, setYoutubeEngagement] = useState('')\n  const [instagramengagement, setInstagramEngagement] = useState('')\n  const [twitterengagement, setTwitterEngagement] = useState('')\n  const [tiktokengagement, setTiktokEngagement] = useState('')\n  const [twitchengagement, setTwitchEngagement] = useState('')\n\n  useEffect(() => {\n    const { match, user } = props\n    influencerShow(user, match.params.id)\n      .then((res) => {\n        setFirstname(res.data.influencer.firstname)\n        setLastname(res.data.influencer.lastname)\n        setUsername(res.data.influencer.username)\n        setProfilephoto(res.data.influencer.profilephoto)\n        setCountry(res.data.influencer.country)\n        setCity(res.data.influencer.city)\n        setYoutube(res.data.influencer.youtube)\n        setInstagram(res.data.influencer.instagram)\n        setTwitter(res.data.influencer.twitter)\n        setTiktok(res.data.influencer.tiktok)\n        setTwitch(res.data.influencer.twitch)\n        setYoutubeAudienceSize(res.data.influencer.youtubeaudiencesize)\n        setInstagramAudienceSize(res.data.influencer.instagramaudiencesize)\n        setTwitterAudienceSize(res.data.influencer.twitteraudiencesize)\n        setTiktokAudienceSize(res.data.influencer.tiktokaudiencesize)\n        setTwitchAudienceSize(res.data.influencer.twitchaudiencesize)\n        setTopics(res.data.influencer.topics)\n        setTags(res.data.influencer.tags)\n        setYoutubeEngagement(res.data.influencer.youtubeengagement)\n        setInstagramEngagement(res.data.influencer.instagramengagement)\n        setTwitterEngagement(res.data.influencer.twitterengagement)\n        setTiktokEngagement(res.data.influencer.tiktokengagement)\n        setTwitchEngagement(res.data.influencer.twitchengagement)\n      })\n      .catch(console.error)\n  }, [])\n\n  // console.log('Influencer is', typeof (influencer), influencer)\n\n  const { match } = props\n\n  return (\n    <React.Fragment>\n      <h1>Influencer details</h1>\n      {/* <p> {influencer}</p> */}\n      <div className=\"rowC\">\n        <div style={divMng}>\n          <p></p>\n          <p>Username: {username}</p>\n          <p>{`Name: ${firstname} ${lastname}`}</p>\n          {/* <p>Photo: {profilephoto}</p> */}\n          <p>Instagram: {instagram}</p>\n          <p>{profilephoto}</p>\n          <p>Country: {country}</p>\n          <p>City: {city}</p>\n          <p>Topics: {topics}</p>\n          <p>Tags: {tags}</p>\n        </div>\n        <div>\n          <Card.Img className=\"photo\" variant='top' src={cakemosprofile2} style={cardImg}/>\n        </div>\n      </div>\n\n      {/* <p><YoutubeOutlined /> {youtube}</p>\n      <p><InstagramOutlined/> {instagram}</p>\n      <p><TwitterOutlined /> {twitter}</p>\n      <p>{tiktok}</p>\n      <p>{twitch}</p>\n      <p>{youtubeaudiencesize}</p>\n      <p>{instagramaudiencesize}</p>\n      <p>{twitteraudiencesize}</p>\n      <p>{tiktokaudiencesize}</p>\n      <p>{twitchaudiencesize}</p>\n      <p>{youtubeengagement}</p>\n      <p>{instagramengagement}</p>\n      <p>{twitterengagement}</p>\n      <p>{tiktokengagement}</p>\n      <p>{twitchengagement}</p> */}\n\n      <Table striped bordered hover variant=\"primary\">\n        <thead>\n          <tr>\n            <th>platform</th>\n            <th>@username</th>\n            <th>audience size</th>\n            <th>audience engagement</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td><YoutubeOutlined /> </td>\n            <td>{youtube}</td>\n            <td>{youtubeaudiencesize}</td>\n            <td>{youtubeengagement}</td>\n          </tr>\n          <tr>\n            <td><InstagramOutlined/></td>\n            <td>{instagram}</td>\n            <td>{instagramaudiencesize}</td>\n            <td>{instagramengagement}</td>\n          </tr>\n          <tr>\n            <td><TwitterOutlined /></td>\n            <td>{twitter}</td>\n            <td>{twitteraudiencesize}</td>\n            <td>{twitterengagement}</td>\n          </tr>\n          <tr>\n            <td>TikTok</td>\n            <td>{tiktok}</td>\n            <td>{tiktokaudiencesize}</td>\n            <td>{tiktokengagement}</td>\n          </tr>\n          <tr>\n            <td>Twitch</td>\n            <td>{twitch}</td>\n            <td>{twitchaudiencesize}</td>\n            <td>{twitchengagement}</td>\n          </tr>\n        </tbody>\n      </Table>\n\n      {/* delete influencer */}\n\n      {/* <Button onClick={deleteInfluencer()} variant=\"primary\" type=\"submit\">\n            Delete Influencer\n      </Button> */}\n\n      {/* <Button>\n        <Link to={{ pathname: `/update-influencer/${match.params.id}/edit` }} style={{ color: '#FFF', textDecoration: 'none' }}>Update Now\n        </Link>\n      </Button> */}\n\n      <Button>\n        <Link to={{ pathname: `/update-influencer/${match.params.id}/editv2` }} style={{ color: '#FFF', textDecoration: 'none' }}>Update\n        </Link>\n      </Button>\n\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(ShowInfluencers)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\n// import { signIn } from '../../api/auth'\n// import { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\n// Influencer specific imports\nimport { influencerUpdate, influencerShow } from '../../api/influencer'\nimport { updateInfluencerSuccess, updateInfluencerFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nfunction UpdateInfluencer (props) {\n//   const [email, setEmail] = useState('')\n//   const [password, setPassword] = useState('')\n// influencer variables\n  const [firstname, setFirstname] = useState('')\n  //   const [lastname, setLastname] = useState('')\n  //   const [username, setUsername] = useState('')\n  //   const [profilephoto, setProfilephoto] = useState('')\n  //   const [country, setCountry] = useState('')\n  //   const [city, setCity] = useState('')\n  //   const [youtube, setYoutube] = useState('')\n  //   const [instagram, setInstagram] = useState('')\n  //   const [twitter, setTwitter] = useState('')\n  //   const [tiktok, setTiktok] = useState('')\n  //   const [twitch, setTwitch] = useState('')\n  //   const [youtubeaudiencesize, setYoutubeaudiencesize] = useState('')\n  //   const [instagramaudiencesize, setInstagramaudiencesize] = useState('')\n  //   const [twitteraudiencesize, setTwitteraudiencesize] = useState('')\n  //   const [tiktokaudiencesize, setTiktokaudiencesize] = useState('')\n  //   const [twitchaudiencesize, setTwitchaudiencesize] = useState('')\n  //   const [topics, setTopics] = useState('')\n  //   const [tags, setTags] = useState('')\n  //   const [youtubeengagement, setYoutubeengagement] = useState('')\n  //   const [instagramengagement, setInstagramengagement] = useState('')\n  //   const [twitterengagement, setTwitterengagement] = useState('')\n  //   const [tiktokengagement, setTiktokengagement] = useState('')\n  //   const [twitchengagement, setTwitchengagement] = useState('')\n\n  useEffect(() => {\n    const { match, msgAlert, user, history } = props\n    influencerShow(user, match.params.id)\n      .then((res) => setFirstname(res.data.influencer.firstname))\n      .then(() => onUpdateInfluencer())\n      .then(() => {\n        msgAlert({\n          heading: 'The influencer was updated successfully',\n          message: updateInfluencerSuccess,\n          variant: 'success'\n        })\n      })\n      .then(() => {\n        history.push('/')\n      })\n      .catch((error) => {\n        setFirstname('')\n        msgAlert({\n          heading: 'Adding the influencer Failed with error: ' + error.message,\n          message: updateInfluencerFailure,\n          variant: 'danger'\n        })\n      })\n  }, [])\n\n  // update\n  const onUpdateInfluencer = (e) => {\n    e.preventDefault()\n    const { match, msgAlert, history, user } = props\n    const data = {\n      firstname\n    //   lastname,\n    //   username,\n    //   profilephoto,\n    //   country,\n    //   city,\n    //   youtube,\n    //   instagram,\n    //   twitter,\n    //   tiktok,\n    //   twitch,\n    //   youtubeaudiencesize,\n    //   instagramaudiencesize,\n    //   twitteraudiencesize,\n    //   tiktokaudiencesize,\n    //   twitchaudiencesize,\n    //   topics,\n    //   tags,\n    //   youtubeengagement,\n    //   instagramengagement,\n    //   twitterengagement,\n    //   tiktokengagement,\n    //   twitchengagement\n    }\n\n    influencerUpdate(data, user, match.params.id)\n    //   .then((res) => {\n    //     setUser(res.data.user)\n    //   })\n      .then(() => {\n        msgAlert({\n          heading: 'The influencer was added successfully',\n          message: updateInfluencerSuccess,\n          variant: 'success'\n        })\n      })\n      .then(() => {\n        history.push('/')\n      })\n      .catch((error) => {\n        setFirstname('')\n        msgAlert({\n          heading: 'Adding the influencer Failed with error: ' + error.message,\n          message: updateInfluencerFailure,\n          variant: 'danger'\n        })\n      })\n\n    // return (\n    //   <>\n    //     <p>Paragraph Tag</p>\n    //   </>\n    // )\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n          <h3>Create Influencer</h3>\n          <Form onSubmit={onUpdateInfluencer}>\n            <Form.Group controlId=\"firstname\">\n              <Form.Label>first name</Form.Label>\n              <Form.Control\n                required\n                type=\"string\"\n                name=\"firstname\"\n                value={firstname}\n                placeholder=\"Enter firstname\"\n                onChange={(e) => {\n                  setFirstname(e.target.value)\n                }}\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n                        Submit\n            </Button>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(UpdateInfluencer)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n// import Dropdown from 'react-bootstrap/Dropdown'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n// API request\nimport { influencerUpdateV2, influencerShow } from '../../api/influencer'\n\nclass UpdateInfluencerV2 extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      influencer: {\n        firstname: '',\n        done: false\n      }\n    }\n  }\n\n  componentDidMount () {\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\n    const { match, user } = this.props\n\n    influencerShow(user, match.params.id)\n      .then((res) => this.setState({ influencer: res.data.influencer }))\n  }\n\nhandleChange = (event) => {\n  const copiedInfluencer = Object.assign(this.state.influencer)\n  copiedInfluencer[event.target.name] = event.target.value\n  this.setState({ influencer: copiedInfluencer })\n}\n\nhandleSubmit = (event) => {\n  event.preventDefault()\n\n  const { user, msgAlert, history, match, location } = this.props\n\n  influencerUpdateV2(this.state.influencer, user, match.params.id)\n    .then((res) => {\n      console.log(location)\n      console.log(user)\n      history.push('/show-influencer/' + match.params.id)\n    //   history.push('/')\n    })\n    .then(() =>\n      msgAlert({\n        heading: 'Influencer Updated Successfully',\n        message: 'Nice work, go check out your updated influencer.',\n        variant: 'success'\n      })\n    )\n    .catch((err) => {\n      msgAlert({\n        heading: 'Influencer update failed :(',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { influencer } = this.state\n  return (\n\n    <div className=\"row\">\n      <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n        <h3>Update Influencer</h3>\n        <Form onSubmit={this.handleSubmit}>\n\n          {/* first name */}\n          <Form.Group controlId=\"firstname\">\n            <Form.Label>(required) first name</Form.Label>\n            <Form.Control\n              required\n              type=\"string\"\n              name=\"firstname\"\n              value={influencer.firstname}\n              placeholder=\"Enter firstname\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* last name */}\n          <Form.Group controlId=\"lastname\">\n            <Form.Label>(required) last name</Form.Label>\n            <Form.Control\n              // required\n              type=\"string\"\n              name=\"lastname\"\n              value={influencer.lastname}\n              placeholder=\"Enter last name\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* username */}\n          <Form.Group controlId=\"username\">\n            <Form.Label>(required) username</Form.Label>\n            <Form.Control\n              required\n              type=\"string\"\n              name=\"username\"\n              value={influencer.username}\n              placeholder=\"Enter username\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* Profile Photo */}\n          <Form.Group controlId=\"profilephoto\">\n            <Form.Label>Profile Photo</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"profilephoto\"\n              value={influencer.profilephoto}\n              placeholder=\"Choose profilephoto\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* Country */}\n          <Form.Group controlId=\"country\">\n            <Form.Label>Country</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"country\"\n              value={influencer.country}\n              placeholder=\"Choose country\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* City */}\n          <Form.Group controlId=\"city\">\n            <Form.Label>City</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"city\"\n              value={influencer.city}\n              placeholder=\"Choose city\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* Youtube */}\n          <Form.Group controlId=\"Youtube\">\n            <Form.Label>Youtube</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"youtube\"\n              value={influencer.youtube}\n              placeholder=\"youtube\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* instagram */}\n          <Form.Group controlId=\"instagram\">\n            <Form.Label>instagram</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"instagram\"\n              value={influencer.instagram}\n              placeholder=\"instagram\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* twitter */}\n          <Form.Group controlId=\"twitter\">\n            <Form.Label>twitter</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"twitter\"\n              value={influencer.twitter}\n              placeholder=\"twitter\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* tiktok */}\n          <Form.Group controlId=\"tiktok\">\n            <Form.Label>tiktok</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"tiktok\"\n              value={influencer.tiktok}\n              placeholder=\"tiktok\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* twitch */}\n          <Form.Group controlId=\"twitch\">\n            <Form.Label>twitch</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"twitch\"\n              value={influencer.twitch}\n              placeholder=\"twitch\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* Youtube Audience Size */}\n          <Form.Group controlId=\"youtubeaudiencesize\">\n            <Form.Label>youtube audience size</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"youtubeaudiencesize\"\n              value={influencer.youtubeaudiencesize}\n              placeholder=\"youtubeaudiencesize\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* Instagram Audience Size */}\n          <Form.Group controlId=\"instagramaudiencesize\">\n            <Form.Label>instagram audience size</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"instagramaudiencesize\"\n              value={influencer.instagramaudiencesize}\n              placeholder=\"instagramaudiencesize\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* twitter Audience Size */}\n          <Form.Group controlId=\"twitteraudiencesize\">\n            <Form.Label>twitter audience size</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"twitteraudiencesize\"\n              value={influencer.twitteraudiencesize}\n              placeholder=\"twitteraudiencesize\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* TikTok Audience Size */}\n          <Form.Group controlId=\"tiktokaudiencesize\">\n            <Form.Label>tiktok audience size</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"tiktokaudiencesize\"\n              value={influencer.tiktokaudiencesize}\n              placeholder=\"tiktokaudiencesize\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* Twitch Audience Size */}\n          <Form.Group controlId=\"twitchaudiencesize\">\n            <Form.Label>twitch audience size</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"twitchaudiencesize\"\n              value={influencer.twitchaudiencesize}\n              placeholder=\"twitchaudiencesize\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* topics */}\n          <Form.Group controlId=\"topics\">\n            <Form.Label>topics</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"topics\"\n              value={influencer.topics}\n              placeholder=\"topics\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* tags */}\n          <Form.Group controlId=\"tags\">\n            <Form.Label>tags</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"tags\"\n              value={influencer.tags}\n              placeholder=\"tags\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* youtubeengagement */}\n          <Form.Group controlId=\"youtubeengagement\">\n            <Form.Label>youtubeengagement</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"youtubeengagement\"\n              value={influencer.youtubeengagement}\n              placeholder=\"youtubeengagement\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* instagramengagement */}\n          <Form.Group controlId=\"instagramengagement\">\n            <Form.Label>instagramengagement</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"instagramengagement\"\n              value={influencer.instagramengagement}\n              placeholder=\"instagramengagement\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* twitterengagement */}\n          <Form.Group controlId=\"twitterengagement\">\n            <Form.Label>twitterengagement</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"twitterengagement\"\n              value={influencer.twitterengagement}\n              placeholder=\"twitterengagement\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* tiktokengagement */}\n          <Form.Group controlId=\"tiktokengagement\">\n            <Form.Label>tiktokengagement</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"tiktokengagement\"\n              value={influencer.tiktokengagement}\n              placeholder=\"tiktokengagement\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {/* twitchengagement */}\n          <Form.Group controlId=\"twitchengagement\">\n            <Form.Label>twitchengagement</Form.Label>\n            <Form.Control\n              type=\"string\"\n              name=\"twitchengagement\"\n              value={influencer.twitchengagement}\n              placeholder=\"twitchengagement\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(UpdateInfluencerV2)\n","\nimport './influencertable.scss'\n\nimport React, { useState, useEffect } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n// import { withRouter } from 'react-router-dom'\nimport { Table } from 'react-bootstrap'\n\nimport Button from 'react-bootstrap/Button'\n\nimport { influencerIndex, deleteInfluencer } from '../../api/influencer'\n\nfunction InfluencersTable (props) {\n  const [influencers, setInfluencers] = useState([])\n  // const [refreshinfluencers, setRefreshInfluencers] = useState(false)\n  const [deletedinfluencer, setDeletedInfluencer] = useState(false)\n\n  const onDeleteInfluencer = (influencerID) => {\n    deleteInfluencer(user, influencerID)\n      .then(() => setDeletedInfluencer(!deletedinfluencer))\n      // Redirect to the influencers index\n      // .then(() => history.push('/show-influencers'))\n      .then(() =>\n        msgAlert({\n          heading: 'Influencer Deleted Successfully',\n          message: 'This influencer was removed',\n          variant: 'success'\n        })\n      )\n      .catch((err) =>\n        msgAlert({\n          heading: 'Influencer was not deleted',\n          message: 'Something went wrong: ' + err.message,\n          variant: 'danger'\n        })\n      )\n  }\n\n  useEffect(() => {\n    const { user } = props\n    influencerIndex(user)\n      .then((res) => setInfluencers(res.data.influencers))\n      .then()\n      .catch(console.error)\n  }, [deletedinfluencer])\n\n  // function to delete influencer\n  const { user, msgAlert } = props\n\n  // const { user } = props\n\n  const influencersAsRows = influencers.map((influencer) => (\n    // <Table responsive striped bordered hover size=\"sm\">\n    <tbody key={influencer._id}>\n      <tr className=\"tableable\" >\n        {/* <td>{influencer._id}</td> */}\n        <td className=\"tdclass\">{influencer.instagram}</td>\n        <td>{influencer.firstname}</td>\n        <td>{influencer.lastname}</td>\n        <td>{influencer.topics}</td>\n        <td>{influencer.tags}</td>\n        <td>{influencer.instagramaudiencesize}</td>\n        <td>{influencer.instagramaengagement}</td>\n        <td>\n          {/* Update Button */}\n          <Button>\n            <Link to={{ pathname: `/update-influencer/${influencer._id}/editv2` }} style={{ color: '#FFF', textDecoration: 'none' }}>Update v2</Link>\n          </Button>\n        </td>\n        <td>\n          {/* Delete Button */}\n          <Button\n            variant='danger' onClick={() => onDeleteInfluencer(influencer._id)}>Delete\n          </Button>\n        </td>\n      </tr>\n    </tbody>\n  ))\n\n  const influencersFullTable = () => (\n    <Table striped bordered hover variant=\"primary\">\n      <thead>\n        <tr>\n          <th>platform</th>\n          <th>@username</th>\n          <th>audience size</th>\n          <th>audience engagement</th>\n        </tr>\n      </thead>\n      {influencersAsRows}\n    </Table>\n  )\n\n  //   let influencersAsTable =\n  //   <>\n  //     <thead>\n  //       <tr>\n  //         <th>#</th>\n  //         <th>First Name</th>\n  //         <th>Last Name</th>\n  //         <th>Username</th>\n  //       </tr>\n  //     </thead>\n  //   </>\n\n  return (\n    <React.Fragment>\n      <h1>Influencers Table</h1>\n      {/* {influencersAsTable} */}\n      {influencersAsRows}\n      {influencersFullTable}\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(InfluencersTable)\n","import React from 'react'\nimport ReactPlayer from 'react-player'\nimport './Homepage.scss'\n\nfunction HomePageVideo () {\n  return (\n    <>\n      <div className=\"video-wrapper\">\n\n        <h1>Influencers marketing a $10bn industry?</h1>\n        <h5>How Influencers have transformed modern marketing</h5>\n        <ReactPlayer\n          url=\"https://youtu.be/gbbEXnRG9d8?t=104\"\n          className=\"react-player\"\n          playing\n          width=\"100%\"\n          height=\"80%\"\n        // controls={false}\n        />\n      </div>\n\n      {/* <div className=\"video-wrapper\">\n        <h5>How Influencers have transformed modern marketing</h5>\n        <ReactPlayer\n          url=\"https://www.youtube.com/watch?v=jZx15RvhFkE\"\n          className=\"react-player\"\n          playing\n          width=\"100%\"\n          height=\"80%\"\n        // controls={false}\n        />\n      </div> */}\n    </>\n\n  //   <h5>Art of Influence Marketing - Influencer Can Also Be Your Follower</h5>\n  //   <ReactPlayer\n  //     url=\"https://www.youtube.com/watch?v=yj77Gu0jPeg\"\n  //   />\n\n  )\n}\n\nexport default HomePageVideo\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n\n// Influencer specific import\nimport CreateInfluencer from './components/influencer/CreateInfluencer'\n// Index Influencers import\nimport ShowInfluencers from './components/influencer/ShowInfluencers'\n// Show One Influencer\nimport ShowInfluencer from './components/influencer/ShowInfluencer'\n// Update One Influencer\nimport UpdateInfluencer from './components/influencer/UpdateInfluencer'\nimport UpdateInfluencerV2 from './components/influencer/UpdateInfluencerV2'\nimport InfluencersTable from './components/influencer/InfluencerTable'\n\nimport HomePageVideos from './components/Homepage/Homepage'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\n  setUser = (user) => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n    })\n  }\n\n  msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    this.setState((state) => {\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  render () {\n    const { msgAlerts, user } = this.state\n\n    return (\n      <Fragment>\n\t      <Header user={user} />\n\t      {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            id={msgAlert.id}\n            deleteAlert={this.deleteAlert}\n          />\n        ))}\n\t      <main className='container'>\n\n          <Switch>\n\t          <Route\n              path='/sign-up'\n              render={() => (\n                <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n              )}\n            />\n            <Route\n              path='/sign-in'\n              render={() => (\n                <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n              )}\n            />\n\n            <Route\n              exact path='/'\n              render={() => (\n                <HomePageVideos />\n              )}\n            />\n\n            <AuthenticatedRoute\n              user={user}\n              exact path='/sign-out'\n              render={() => (\n                <SignOut\n                  msgAlert={this.msgAlert}\n                  clearUser={this.clearUser}\n                  user={user}\n                />\n              )}\n            />\n            <AuthenticatedRoute\n              user={user}\n              exact path='/change-password'\n              render={() => (\n                <ChangePassword msgAlert={this.msgAlert} user={user} />\n              )}\n            />\n\n            {/* Influencer routes */}\n\n            { /* Add influencer */ }\n            <AuthenticatedRoute\n              user={user}\n              exact path='/add-influencer'\n              render={() => (\n                <CreateInfluencer msgAlert={this.msgAlert} user={user} />\n              )}\n            />\n\n            {/* Influencers Index */}\n            <AuthenticatedRoute\n              user={user}\n              exact path='/show-influencers/'\n              render={() => (\n                <ShowInfluencers msgAlert={this.msgAlert} user={user} />\n              )}\n            />\n\n            {/* Show Influencer */}\n            <AuthenticatedRoute\n              user={user}\n              path='/show-influencer/:id'\n              render={() => (\n                <ShowInfluencer msgAlert={this.msgAlert} user={user} />\n              )}\n            />\n\n            {/* Update Influencer */}\n            <AuthenticatedRoute\n              user={user}\n              exact path='/update-influencer/:id/edit'\n              render={() => (\n                <UpdateInfluencer msgAlert={this.msgAlert} user={user} />\n              )}\n            />\n\n            {/* Update Influencer V2 */}\n            <AuthenticatedRoute\n              user={user}\n              exact path='/update-influencer/:id/editv2'\n              render={() => (\n                <UpdateInfluencerV2 msgAlert={this.msgAlert} user={user} />\n              )}\n            />\n\n            {/* Influencers Table */}\n            <AuthenticatedRoute\n              user={user}\n              exact path='/influencerstable/'\n              render={() => (\n                <InfluencersTable msgAlert={this.msgAlert} user={user} />\n              )}\n            />\n          </Switch>\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}