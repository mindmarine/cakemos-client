{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/AutoDismissAlert/messages.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/influencer.js","components/influencer/CreateInfluencer.js","components/influencer/ShowInfluencers.js","components/influencer/ShowInfluencer.js","components/influencer/UpdateInfluencer.js","components/influencer/UpdateInfluencerV2.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","bg","expand","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","updateInfluencerSuccess","updateInfluencerFailure","withRouter","useState","setEmail","setPassword","passwordConfirmation","setPasswordConfirmation","Form","onSubmit","e","preventDefault","msgAlert","history","setUser","password_confirmation","then","res","push","catch","error","Group","controlId","Label","Control","required","type","value","placeholder","onChange","target","Button","name","useEffect","clearUser","headers","Authorization","token","signOut","oldPassword","setOldPassword","newPassword","setNewPassword","passwords","old","new","changePassword","influencerIndex","influencerShow","influencerID","deleteInfluencer","influencerId","firstname","setFirstname","lastname","setLastname","username","setUsername","profilephoto","setProfilephoto","influencer","console","log","owner","country","city","youtube","instagram","twitter","tiktok","twitch","youtubeaudiencesize","instagramaudiencesize","twitteraudiencesize","tiktokaudiencesize","twitchaudiencesize","topics","tags","youtubeengagement","instagramengagement","twitterengagement","tiktokengagement","twitchengagement","createInfluencer","cardImg","margin","padding","width","height","cardCol","marginTop","cardTitle","cardBody","backgroundColor","card","border","influencers","setInfluencers","influencersList","map","Col","xs","md","lg","xl","Card","_id","Body","Img","src","Title","Text","pathname","onClick","Fragment","Row","match","params","onUpdateInfluencer","influencerUpdate","UpdateInfluencerV2","handleChange","event","copiedInfluencer","Object","assign","handleSubmit","influencerUpdateV2","err","done","App","msgAlerts","filter","msg","uuid","path","ShowInfluencer","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8b7245c9.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n    <NavLink to='/add-influencer' className='nav-link'>Add Influencer</NavLink>\n    <NavLink to='/show-influencers' className='nav-link'>Show Influencers</NavLink>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/' className='nav-link'>Home</NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Navbar.Brand>\n      <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>cakemos</Link>\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {user && (\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://cakemos.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","export const signUpSuccess = 'Successfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n\n// influencer specific messages\nexport const createInfluenceSuccess = 'Adding the influencer was successful'\nexport const createInfluencerFailure = 'We have failed trying to add the influencer. data might be incomplete, or another error might happen'\n\n// update influencer specific messages\nexport const updateInfluencerSuccess = 'Update the influencer was successful'\nexport const updateInfluencerFailure = 'We have failed trying to update the influencer'\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nfunction SignUp (props) {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n\n  const onSignUp = (e) => {\n    e.preventDefault()\n    const { msgAlert, history, setUser } = props\n\n    const state = {\n      email: email,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }\n    signUp(state)\n      .then(() => signIn(state))\n      .then((res) => setUser(res.data.user))\n      .then(() =>\n        msgAlert({\n          heading: 'Sign Up Success',\n          message: signUpSuccess,\n          variant: 'success'\n        })\n      )\n      .then(() => history.push('/'))\n      .catch((error) => {\n        // setEmail(\"\");\n        // setPassword(\"\");\n        // setPasswordConfirmation(\"\");\n        msgAlert({\n          heading: 'Sign Up Failed with error: ' + error.message,\n          message: signUpFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => {\n                setEmail(e.target.value)\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              value={password}\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => {\n                setPassword(e.target.value)\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"passwordConfirmation\">\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              value={passwordConfirmation}\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              onChange={(e) => {\n                setPasswordConfirmation(e.target.value)\n              }}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(SignUp)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nfunction SignIn (props) {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const onSignIn = (e) => {\n    e.preventDefault()\n    const { msgAlert, history, setUser } = props\n    const data = {\n      email,\n      password\n    }\n    signIn(data)\n      .then((res) => {\n        setUser(res.data.user)\n      })\n      .then(() => {\n        msgAlert({\n          heading: 'Sign In Success',\n          message: signInSuccess,\n          variant: 'success'\n        })\n      })\n      .then(() => {\n        history.push('/')\n      })\n      .catch((error) => {\n        setEmail('')\n        setPassword('')\n        msgAlert({\n          heading: 'Sign In Failed with error: ' + error.message,\n          message: signInFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => {\n                setEmail(e.target.value)\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name=\"password\"\n              value={password}\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => {\n                setPassword(e.target.value)\n              }}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(SignIn)\n","import { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nfunction SignOut (props) {\n  useEffect(() => {\n    const { msgAlert, history, clearUser, user } = props\n    signOut(user)\n      .then(() => {\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      })\n      .then(() => {\n        history.push('/')\n      })\n      .then(() => {\n        clearUser()\n      })\n  }, [])\n  return null\n}\n\nexport default withRouter(SignOut)\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport {\n  changePasswordSuccess,\n  changePasswordFailure\n} from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nfunction ChangePassword (props) {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n\n  const onChangePassword = (e) => {\n    e.preventDefault()\n    const { msgAlert, history, user } = props\n    const data = {\n      oldPassword,\n      newPassword\n    }\n    changePassword(data, user)\n      .then(() => {\n        msgAlert({\n          heading: 'Change Password Success',\n          message: changePasswordSuccess,\n          variant: 'success'\n        })\n      })\n      .then(() => history.push('/'))\n      .catch((error) => {\n        setOldPassword('')\n        setNewPassword('')\n        msgAlert({\n          heading: 'Change Password Failed with error: ' + error.message,\n          message: changePasswordFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId=\"oldPassword\">\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name=\"oldPassword\"\n              value={oldPassword}\n              type=\"password\"\n              placeholder=\"Old Password\"\n              onChange={(e) => {\n                setOldPassword(e.target.value)\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"newPassword\">\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name=\"newPassword\"\n              value={newPassword}\n              type=\"password\"\n              placeholder=\"New Password\"\n              onChange={(e) => {\n                setNewPassword(e.target.value)\n              }}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(ChangePassword)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\n// create influencer\nexport const createInfluencer = (influencer, user) => {\n  console.log(influencer)\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/influencers/',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      influencer: {\n        owner: influencer.owner,\n        firstname: influencer.firstname,\n        lastname: influencer.lastname,\n        username: influencer.username,\n        profilephoto: influencer.profilephoto,\n        country: influencer.country,\n        city: influencer.city,\n        youtube: influencer.youtube,\n        instagram: influencer.instagram,\n        twitter: influencer.twitter,\n        tiktok: influencer.tiktok,\n        twitch: influencer.twitch,\n        youtubeaudiencesize: influencer.youtubeaudiencesize,\n        instagramaudiencesize: influencer.instagramaudiencesize,\n        twitteraudiencesize: influencer.twitteraudiencesize,\n        tiktokaudiencesize: influencer.tiktokaudiencesize,\n        twitchaudiencesize: influencer.twitchaudiencesize,\n        topics: influencer.topics,\n        tags: influencer.tags,\n        youtubeengagement: influencer.youtubeengagement,\n        instagramengagement: influencer.instagramengagement,\n        twitterengagement: influencer.twitterengagement,\n        tiktokengagement: influencer.tiktokengagement,\n        twitchengagement: influencer.twitchengagement\n      }\n    }\n  })\n}\n\n// show influencer index\nexport const influencerIndex = (user) => {\n  return axios({\n    url: apiUrl + '/influencers/',\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// show influencer\nexport const influencerShow = (user, influencerID) => {\n  return axios({\n    url: apiUrl + `/influencers/${influencerID}`,\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// update influencer\nexport const influencerUpdate = (influencer, user, influencerID) => {\n  return axios({\n    url: apiUrl + `/influencers/${influencerID}`,\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      influencer: {\n        owner: influencer.owner,\n        firstname: influencer.firstname,\n        lastname: influencer.lastname\n        // username: influencer.username,\n        // profilephoto: influencer.profilephoto,\n        // country: influencer.country,\n        // city: influencer.city,\n        // youtube: influencer.youtube,\n        // instagram: influencer.instagram,\n        // twitter: influencer.twitter,\n        // tiktok: influencer.tiktok,\n        // twitch: influencer.twitch,\n        // youtubeaudiencesize: influencer.youtubeaudiencesize,\n        // instagramaudiencesize: influencer.instagramaudiencesize,\n        // twitteraudiencesize: influencer.twitteraudiencesize,\n        // tiktokaudiencesize: influencer.tiktokaudiencesize,\n        // twitchaudiencesize: influencer.twitchaudiencesize,\n        // topics: influencer.topics,\n        // tags: influencer.tags,\n        // youtubeengagement: influencer.youtubeengagement,\n        // instagramengagement: influencer.instagramengagement,\n        // twitterengagement: influencer.twitterengagement,\n        // tiktokengagement: influencer.tiktokengagement,\n        // twitchengagement: influencer.twitchengagement\n      }\n    }\n  })\n}\n\n// update influencer V2\nexport const influencerUpdateV2 = (influencer, user, influencerID) => {\n  console.log(user)\n  return axios({\n    url: apiUrl + `/influencers/${influencerID}`,\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      influencer: {\n        owner: influencer.owner,\n        firstname: influencer.firstname\n        // lastname: influencer.lastname,\n        // username: influencer.username,\n        // profilephoto: influencer.profilephoto,\n        // country: influencer.country,\n        // city: influencer.city,\n        // youtube: influencer.youtube,\n        // instagram: influencer.instagram,\n        // twitter: influencer.twitter,\n        // tiktok: influencer.tiktok,\n        // twitch: influencer.twitch,\n        // youtubeaudiencesize: influencer.youtubeaudiencesize,\n        // instagramaudiencesize: influencer.instagramaudiencesize,\n        // twitteraudiencesize: influencer.twitteraudiencesize,\n        // tiktokaudiencesize: influencer.tiktokaudiencesize,\n        // twitchaudiencesize: influencer.twitchaudiencesize,\n        // topics: influencer.topics,\n        // tags: influencer.tags,\n        // youtubeengagement: influencer.youtubeengagement,\n        // instagramengagement: influencer.instagramengagement,\n        // twitterengagement: influencer.twitterengagement,\n        // tiktokengagement: influencer.tiktokengagement,\n        // twitchengagement: influencer.twitchengagement\n      }\n    }\n  })\n}\n\n// delete an influencer\nexport const deleteInfluencer = (user, influencerId) => {\n  return axios({\n    url: apiUrl + '/influencers/' + influencerId,\n    method: 'delete',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\n// import { signIn } from '../../api/auth'\n// import { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\n// Influencer specific imports\nimport { createInfluencer } from '../../api/influencer'\nimport { createInfluenceSuccess, createInfluencerFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nfunction CreateInfluencer (props) {\n//   const [email, setEmail] = useState('')\n//   const [password, setPassword] = useState('')\n// influencer variables\n  const [firstname, setFirstname] = useState('')\n  const [lastname, setLastname] = useState('')\n  const [username, setUsername] = useState('')\n  const [profilephoto, setProfilephoto] = useState('')\n  // const [country, setCountry] = useState('')\n  // const [city, setCity] = useState('')\n  // const [youtube, setYoutube] = useState('')\n  // const [instagram, setInstagram] = useState('')\n  // const [twitter, setTwitter] = useState('')\n  // const [tiktok, setTiktok] = useState('')\n  // const [twitch, setTwitch] = useState('')\n  // const [youtubeaudiencesize, setYoutubeaudiencesize] = useState('')\n  // const [instagramaudiencesize, setInstagramaudiencesize] = useState('')\n  // const [twitteraudiencesize, setTwitteraudiencesize] = useState('')\n  // const [tiktokaudiencesize, setTiktokaudiencesize] = useState('')\n  // const [twitchaudiencesize, setTwitchaudiencesize] = useState('')\n  // const [topics, setTopics] = useState('')\n  // const [tags, setTags] = useState('')\n  // const [youtubeengagement, setYoutubeengagement] = useState('')\n  // const [instagramengagement, setInstagramengagement] = useState('')\n  // const [twitterengagement, setTwitterengagement] = useState('')\n  // const [tiktokengagement, setTiktokengagement] = useState('')\n  // const [twitchengagement, setTwitchengagement] = useState('')\n\n  const onCreateInfluencer = (e) => {\n    e.preventDefault()\n    const { msgAlert, history, user } = props\n    const data = {\n      firstname,\n      lastname,\n      username,\n      profilephoto\n      // country,\n      // city,\n      // youtube,\n      // instagram,\n      // twitter,\n      // tiktok,\n      // twitch,\n      // youtubeaudiencesize,\n      // instagramaudiencesize,\n      // twitteraudiencesize,\n      // tiktokaudiencesize,\n      // twitchaudiencesize,\n      // topics,\n      // tags,\n      // youtubeengagement,\n      // instagramengagement,\n      // twitterengagement,\n      // tiktokengagement,\n      // twitchengagement\n    }\n    createInfluencer(data, user)\n    //   .then((res) => {\n    //     setUser(res.data.user)\n    //   })\n      .then(() => {\n        msgAlert({\n          heading: 'The influencer was added successfully',\n          message: createInfluenceSuccess,\n          variant: 'success'\n        })\n      })\n      .then(() => {\n        history.push('/')\n      })\n      .catch((error) => {\n        setFirstname('')\n        msgAlert({\n          heading: 'Adding the influencer Failed with error: ' + error.message,\n          message: createInfluencerFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n        <h3>Create Influencer</h3>\n        <Form onSubmit={onCreateInfluencer}>\n\n          {/* first name */}\n          <Form.Group controlId=\"firstname\">\n            <Form.Label>first name</Form.Label>\n            <Form.Control\n              required\n              type=\"string\"\n              name=\"firstname\"\n              value={firstname}\n              placeholder=\"Enter firstname\"\n              onChange={(e) => {\n                setFirstname(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* last name */}\n          <Form.Group controlId=\"lastname\">\n            <Form.Label>last name</Form.Label>\n            <Form.Control\n              required\n              type=\"string\"\n              name=\"lastname\"\n              value={lastname}\n              placeholder=\"Enter last name\"\n              onChange={(e) => {\n                setLastname(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* username */}\n          <Form.Group controlId=\"username\">\n            <Form.Label>last name</Form.Label>\n            <Form.Control\n              required\n              type=\"string\"\n              name=\"username\"\n              value={username}\n              placeholder=\"Enter username\"\n              onChange={(e) => {\n                setUsername(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          {/* Profile Photo */}\n          <Form.Group controlId=\"profilephoto\">\n            <Form.Label>Profile Photo</Form.Label>\n            <Form.Control\n              required\n              type=\"string\"\n              name=\"profilephoto\"\n              value={username}\n              placeholder=\"Choose profilephoto\"\n              onChange={(e) => {\n                setProfilephoto(e.target.value)\n              }}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(CreateInfluencer)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n// import { withRouter } from 'react-router-dom'\nimport { Card, Col, Row } from 'react-bootstrap'\n\n// import { signUp, signIn } from '../../api/auth'\n// import { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Button from 'react-bootstrap/Button'\n\nimport { influencerIndex, deleteInfluencer } from '../../api/influencer'\n\nconst cardImg = {\n  margin: 'auto',\n  padding: '25px',\n  width: 'auto',\n  height: '200px'\n}\n\nconst cardCol = {\n  margin: 'auto',\n  marginTop: '10px'\n}\n\nconst cardTitle = {\n  height: '10px'\n}\n\nconst cardBody = {\n  backgroundColor: 'teal',\n  // borderRadius: '0px 0px 8px 8px',\n  color: '#FFF'\n}\n\nconst card = {\n  border: 'none'\n  // borderRadius: '10px'\n}\n\n// import Form from 'react-bootstrap/Form'\n// import Button from 'react-bootstrap/Button'\n\nfunction ShowInfluencers (props) {\n  // in order to be able to use the map method we need to set the state of influencers to an array from the beginning\n  const [influencers, setInfluencers] = useState([])\n\n  useEffect(() => {\n    const { user } = props\n    influencerIndex(user)\n      .then((res) => setInfluencers(res.data.influencers))\n      .catch(console.error)\n  }, [])\n\n  useEffect(() => {\n    const { user } = props\n    deleteInfluencer(user)\n      .then((res) => influencerIndex(res.data.influencers))\n      .catch(console.error)\n  }, [])\n\n  // const { user, msgAlert, history } = props\n  // deleteInfluencer(user, influencerID)\n  //   // Redirect to the influencers index\n  //   .then(() => history.push('/show-influencers'))\n  //   .then(() =>\n  //     msgAlert({\n  //       heading: 'Influencer Deleted Successfully',\n  //       message: 'This influencer was removed',\n  //       variant: 'success'\n  //     })\n  //   )\n  //   .catch((err) =>\n  //     msgAlert({\n  //       heading: 'Influencer was not deleted',\n  //       message: 'Something went wrong: ' + err.message,\n  //       variant: 'danger'\n  //     })\n  //   )\n\n  // const { user } = props\n\n  const influencersList = influencers.map((influencer) => (\n    <Col xs={12} md={6} lg={4} xl={4} key={influencer._id} style={cardCol}>\n      <Card style={card} className='m-auto'>\n        <Link to={`/show-influencer/${influencer._id}`}>\n          <Card.Body style={cardBody}>\n            <Card.Img variant='top' src={`${influencer.profilephoto}`} style={cardImg} />\n            <Card.Title style={cardTitle}>{influencer.username}</Card.Title>\n            {/* <Card.Text>username: {influencer.firstname}</Card.Text>\n            <Card.Text>username: {influencer.username}</Card.Text> */}\n            <Card.Text>\n              {`Name: ${influencer.firstname} ${influencer.username}`}\n            </Card.Text>\n            <Card.Text>username: {influencer.username}</Card.Text>\n          </Card.Body>\n        </Link>\n        {/* Update Button */}\n        <Button>\n          <Link to={{ pathname: `/update-influencer/${influencer._id}/editv2` }} style={{ color: '#FFF', textDecoration: 'none' }}>Update v2\n          </Link>\n        </Button>\n        {/* Delete Button */}\n        <Button variant='danger' onClick={deleteInfluencer()}>Delete Influencer</Button>\n\n      </Card>\n    </Col>\n  ))\n\n  return (\n    <React.Fragment>\n      <h1>Hello World</h1>\n      {/* <li>{influencersList}</li> */}\n      <Row>\n        <h3 className='text-light'>Influencers</h3>\n        <Col xs={12} style={{ marginTop: '10px' }}>\n          <Row>{influencersList}</Row>\n        </Col>\n\n        <div className='col-12 mt-5'></div>\n      </Row>\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(ShowInfluencers)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n// import { withRouter } from 'react-router-dom'\n\n// import { signUp, signIn } from '../../api/auth'\n// import { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport { influencerShow } from '../../api/influencer'\n\n// import Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nfunction ShowInfluencers (props) {\n  const [firstname, setFirstname] = useState(' ')\n  //   const [lastname, setLastname] = useState(' ')\n  //   const [username, setUsername] = useState(' ')\n  //   const [profilephoto, setProfilephoto] = useState(' ')\n  //   const [country, setCountry] = useState(' ')\n  //   const [city, setCity] = useState(' ')\n  //   const [youtube, setYoutube] = useState(' ')\n  //   const [instagram, setInstagram] = useState(' ')\n  //   const [twitter, setTwitter] = useState(' ')\n  //   const [tiktok, setTiktok] = useState(' ')\n  //   const [twitch, setTwitch] = useState(' ')\n  //   const [youtubeaudiencesize, setYoutubeaudiencesize] = useState(' ')\n  //   const [instagramaudiencesize, setInstagramaudiencesize] = useState(' ')\n  //   const [twitteraudiencesize, setTwitteraudiencesize] = useState(' ')\n  //   const [tiktokaudiencesize, setTiktokaudiencesize] = useState(' ')\n  //   const [twitchaudiencesize, setTwitchaudiencesize] = useState(' ')\n  //   const [topics, setTopics] = useState(' ')\n  //   const [tags, setTags] = useState(' ')\n  //   const [youtubeengagement, setYoutubeengagement] = useState(' ')\n  //   const [instagramengagement, setInstagramengagement] = useState(' ')\n  //   const [twitterengagement, setTwitterengagement] = useState(' ')\n  //   const [tiktokengagement, setTiktokengagement] = useState(' ')\n  //   const [twitchengagement, setTwitchengagement] = useState(' ')\n\n  useEffect(() => {\n    const { match, user } = props\n    influencerShow(user, match.params.id)\n      .then((res) => setFirstname(res.data.influencer.firstname))\n      .catch(console.error)\n  }, [])\n\n  // console.log('Influencer is', typeof (influencer), influencer)\n\n  const { match } = props\n\n  return (\n    <React.Fragment>\n      <h1>Hello Influencers</h1>\n      {/* <p> {influencer}</p> */}\n      <p>{firstname}</p>\n\n      {/* delete influencer */}\n\n      {/* <Button onClick={deleteInfluencer()} variant=\"primary\" type=\"submit\">\n            Delete Influencer\n      </Button> */}\n\n      {/* <Button>\n        <Link to={{ pathname: `/update-influencer/${match.params.id}/edit` }} style={{ color: '#FFF', textDecoration: 'none' }}>Update Now\n        </Link>\n      </Button> */}\n\n      <Button>\n        <Link to={{ pathname: `/update-influencer/${match.params.id}/editv2` }} style={{ color: '#FFF', textDecoration: 'none' }}>Update v2\n        </Link>\n      </Button>\n\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(ShowInfluencers)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\n// import { signIn } from '../../api/auth'\n// import { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\n// Influencer specific imports\nimport { influencerUpdate, influencerShow } from '../../api/influencer'\nimport { updateInfluencerSuccess, updateInfluencerFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nfunction UpdateInfluencer (props) {\n//   const [email, setEmail] = useState('')\n//   const [password, setPassword] = useState('')\n// influencer variables\n  const [firstname, setFirstname] = useState('')\n  //   const [lastname, setLastname] = useState('')\n  //   const [username, setUsername] = useState('')\n  //   const [profilephoto, setProfilephoto] = useState('')\n  //   const [country, setCountry] = useState('')\n  //   const [city, setCity] = useState('')\n  //   const [youtube, setYoutube] = useState('')\n  //   const [instagram, setInstagram] = useState('')\n  //   const [twitter, setTwitter] = useState('')\n  //   const [tiktok, setTiktok] = useState('')\n  //   const [twitch, setTwitch] = useState('')\n  //   const [youtubeaudiencesize, setYoutubeaudiencesize] = useState('')\n  //   const [instagramaudiencesize, setInstagramaudiencesize] = useState('')\n  //   const [twitteraudiencesize, setTwitteraudiencesize] = useState('')\n  //   const [tiktokaudiencesize, setTiktokaudiencesize] = useState('')\n  //   const [twitchaudiencesize, setTwitchaudiencesize] = useState('')\n  //   const [topics, setTopics] = useState('')\n  //   const [tags, setTags] = useState('')\n  //   const [youtubeengagement, setYoutubeengagement] = useState('')\n  //   const [instagramengagement, setInstagramengagement] = useState('')\n  //   const [twitterengagement, setTwitterengagement] = useState('')\n  //   const [tiktokengagement, setTiktokengagement] = useState('')\n  //   const [twitchengagement, setTwitchengagement] = useState('')\n\n  useEffect(() => {\n    const { match, msgAlert, user, history } = props\n    influencerShow(user, match.params.id)\n      .then((res) => setFirstname(res.data.influencer.firstname))\n      .then(() => onUpdateInfluencer())\n      .then(() => {\n        msgAlert({\n          heading: 'The influencer was updated successfully',\n          message: updateInfluencerSuccess,\n          variant: 'success'\n        })\n      })\n      .then(() => {\n        history.push('/')\n      })\n      .catch((error) => {\n        setFirstname('')\n        msgAlert({\n          heading: 'Adding the influencer Failed with error: ' + error.message,\n          message: updateInfluencerFailure,\n          variant: 'danger'\n        })\n      })\n  }, [])\n\n  // update\n  const onUpdateInfluencer = (e) => {\n    e.preventDefault()\n    const { match, msgAlert, history, user } = props\n    const data = {\n      firstname\n    //   lastname,\n    //   username,\n    //   profilephoto,\n    //   country,\n    //   city,\n    //   youtube,\n    //   instagram,\n    //   twitter,\n    //   tiktok,\n    //   twitch,\n    //   youtubeaudiencesize,\n    //   instagramaudiencesize,\n    //   twitteraudiencesize,\n    //   tiktokaudiencesize,\n    //   twitchaudiencesize,\n    //   topics,\n    //   tags,\n    //   youtubeengagement,\n    //   instagramengagement,\n    //   twitterengagement,\n    //   tiktokengagement,\n    //   twitchengagement\n    }\n\n    influencerUpdate(data, user, match.params.id)\n    //   .then((res) => {\n    //     setUser(res.data.user)\n    //   })\n      .then(() => {\n        msgAlert({\n          heading: 'The influencer was added successfully',\n          message: updateInfluencerSuccess,\n          variant: 'success'\n        })\n      })\n      .then(() => {\n        history.push('/')\n      })\n      .catch((error) => {\n        setFirstname('')\n        msgAlert({\n          heading: 'Adding the influencer Failed with error: ' + error.message,\n          message: updateInfluencerFailure,\n          variant: 'danger'\n        })\n      })\n\n    // return (\n    //   <>\n    //     <p>Paragraph Tag</p>\n    //   </>\n    // )\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n          <h3>Create Influencer</h3>\n          <Form onSubmit={onUpdateInfluencer}>\n            <Form.Group controlId=\"firstname\">\n              <Form.Label>first name</Form.Label>\n              <Form.Control\n                required\n                type=\"string\"\n                name=\"firstname\"\n                value={firstname}\n                placeholder=\"Enter firstname\"\n                onChange={(e) => {\n                  setFirstname(e.target.value)\n                }}\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n                        Submit\n            </Button>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(UpdateInfluencer)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n// import Dropdown from 'react-bootstrap/Dropdown'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n// API request\nimport { influencerUpdateV2, influencerShow } from '../../api/influencer'\n\nclass UpdateInfluencerV2 extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      influencer: {\n        firstname: '',\n        done: false\n      }\n    }\n  }\n\n  componentDidMount () {\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\n    const { match, user } = this.props\n\n    influencerShow(user, match.params.id)\n      .then((res) => this.setState({ influencer: res.data.influencer }))\n  }\n\nhandleChange = (event) => {\n  const copiedInfluencer = Object.assign(this.state.influencer)\n  copiedInfluencer[event.target.name] = event.target.value\n  this.setState({ influencer: copiedInfluencer })\n}\n\nhandleSubmit = (event) => {\n  event.preventDefault()\n\n  const { user, msgAlert, history, match, location } = this.props\n\n  influencerUpdateV2(this.state.influencer, user, match.params.id)\n    .then((res) => {\n      console.log(location)\n      console.log(user)\n      history.push('/show-influencer/' + match.params.id)\n    //   history.push('/')\n    })\n    .then(() =>\n      msgAlert({\n        heading: 'Influencer Updated Successfully',\n        message: 'Nice work, go check out your updated influencer.',\n        variant: 'success'\n      })\n    )\n    .catch((err) => {\n      msgAlert({\n        heading: 'Influencer update failed :(',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { influencer } = this.state\n  return (\n\n    <div className=\"row\">\n      <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n        <h3>Update Influencer</h3>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group controlId=\"firstname\">\n            <Form.Label>first name</Form.Label>\n            <Form.Control\n              required\n              type=\"string\"\n              name=\"firstname\"\n              value={influencer.firstname}\n              placeholder=\"Enter firstname\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(UpdateInfluencerV2)\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n\n// Influencer specific import\nimport CreateInfluencer from './components/influencer/CreateInfluencer'\n// Index Influencers import\nimport ShowInfluencers from './components/influencer/ShowInfluencers'\n// Show One Influencer\nimport ShowInfluencer from './components/influencer/ShowInfluencer'\n// Update One Influencer\nimport UpdateInfluencer from './components/influencer/UpdateInfluencer'\nimport UpdateInfluencerV2 from './components/influencer/UpdateInfluencerV2'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\n  setUser = (user) => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n    })\n  }\n\n  msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    this.setState((state) => {\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  render () {\n    const { msgAlerts, user } = this.state\n\n    return (\n      <Fragment>\n\t      <Header user={user} />\n\t      {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            id={msgAlert.id}\n            deleteAlert={this.deleteAlert}\n          />\n        ))}\n\t      <main className='container'>\n\t        <Route\n            path='/sign-up'\n            render={() => (\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/sign-in'\n            render={() => (\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/sign-out'\n            render={() => (\n              <SignOut\n                msgAlert={this.msgAlert}\n                clearUser={this.clearUser}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/change-password'\n            render={() => (\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n\n          {/* Influencer routes */}\n\n          { /* Add influencer */ }\n          <AuthenticatedRoute\n            user={user}\n            path='/add-influencer'\n            render={() => (\n              <CreateInfluencer msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n\n          {/* Influencers Index */}\n          <AuthenticatedRoute\n            user={user}\n            path='/show-influencers/'\n            render={() => (\n              <ShowInfluencers msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n\n          {/* Show Influencer */}\n          <AuthenticatedRoute\n            user={user}\n            path='/show-influencer/:id'\n            render={() => (\n              <ShowInfluencer msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n\n          {/* Update Influencer */}\n          <AuthenticatedRoute\n            user={user}\n            path='/update-influencer/:id/edit'\n            render={() => (\n              <UpdateInfluencer msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n\n          {/* Update Influencer V2 */}\n          <AuthenticatedRoute\n            user={user}\n            path='/update-influencer/:id/editv2'\n            render={() => (\n              <UpdateInfluencerV2 msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n\n          {/* Delete Influencer */}\n          <AuthenticatedRoute\n            user={user}\n            path='/delete-influencer/:id/'\n            render={() => (\n              <UpdateInfluencerV2 msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}